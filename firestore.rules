rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of a document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Rules for the 'users' collection and its subcollections
    match /users/{userId} {
      // Users can only access their own user document.
      allow read, write: if isSignedIn() && isOwner(userId);

      // Rules for the 'notifications' subcollection
      match /notifications/{notificationId} {
        // The owner can read and update their own notifications.
        allow read, update: if isSignedIn() && isOwner(userId);
        // The cron job can create notifications.
        allow create: if request.auth.uid == 'default-user' || (isSignedIn() && isOwner(userId));
      }
    }

    // Rules for the 'studyPlans' collection
    match /studyPlans/{planId} {
      // A user can read a study plan if they are the owner.
      allow get, list: if isSignedIn() && isOwner(resource.data.userId);
      
      // A user can create a study plan if they are signed in and the
      // 'userId' in the new document matches their own UID.
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      
      // A user can update a study plan if they are the owner.
      // The cron job (impersonating 'default-user') is also allowed to update.
      allow update: if isSignedIn() && (isOwner(resource.data.userId) || request.auth.uid == 'default-user');

      // A user can delete a study plan if they are the owner.
      allow delete: if isSignedIn() && isOwner(resource.data.userId);
    }
  }
}
