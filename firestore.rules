rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any signed-in user can create their own profile
      allow create: if isSignedIn() && isOwner(userId);
      // Only the owner can read or update their own profile
      allow read, update: if isSignedIn() && isOwner(userId);
      // Users should not be able to delete their profiles through the app
      allow delete: if false;

      // Rules for the 'notifications' subcollection
      match /notifications/{notificationId} {
        // The parent user can read, create, and update their own notifications
        allow read, create, update: if isSignedIn() && isOwner(userId);
        // Notifications should not be deleted by the client
        allow delete: if false;
      }
    }

    // Rules for the 'studyPlans' collection
    match /studyPlans/{planId} {
      // A user can create a study plan if they are signed in and the plan's userId matches their own.
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);

      // A user can read a study plan only if they are the owner.
      // This covers both get (single document) and list (query) operations.
      allow read: if isSignedIn() && isOwner(resource.data.userId);
      
      // A user can update or delete a study plan only if they are the owner.
      allow update, delete: if isSignedIn() && isOwner(resource.data.userId);
    }
  }
}
